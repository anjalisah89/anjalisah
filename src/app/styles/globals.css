/* Global Base Styles */
body {
  background-color: var(--bgColor-default);
  color: var(--fgColor-default);
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  margin: 0;
  padding: 0;
  line-height: 1.5;
  transition: background-color 0.2s ease-out, color 0.2s ease-out;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Layout and Structural Elements */
header {
  background-color: var(--header-bgColor);
  color: var(--header-fgColor-default);
  padding: 1rem 1.5rem;
  border-bottom: 1px solid var(--header-borderColor-divider);
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: 60px;
}

.sidebar {
  background-color: var(--sidebar-bgColor);
  color: var(--fgColor-default);
  width: 250px;
  height: calc(100vh);
  padding: 1.5rem 1rem;
  float: left;
  overflow-y: auto;
  border-right: 1px solid var(--borderColor-default);
}

.main-content {
  margin-left: 250px;
  padding: 2rem;
  background-color: var(--main-content-bgColor);
  min-height: calc(100vh);
}

.button-group {
  display: flex;
  gap: 1rem;
  align-items: center;
  flex-wrap: wrap;
  margin-bottom: 1rem;
}

.form-elements {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-width: 400px;
  margin-bottom: 1rem;
}

/* Typography and Links */
a {
  color: var(--fgColor-link);
  text-decoration: none;
  transition: color 0.2s ease;
}

a:hover {
  text-decoration: none;
}

.sidebar {
  border-right: 1px solid var(--borderColor-muted); 
}

.sidebar a {
  display: block;
  padding: 0.5rem 0;
  border-radius: 4px;
  padding-left: 0.5rem;
  color: var(--fgColor-default); 
}

@media (max-width: 991.98px) { 
  .sidebar {
    display: none;
  }
}

.sidebar a:hover {
  background-color: var(--sidebar-link-bgColor-hover);
  text-decoration: none;
}

/* Buttons */
button,
.button {
  padding: 0.6rem 1.2rem;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 500;
  font-size: 0.95rem;
  line-height: 1.2;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s ease, border-color 0.2s ease, color 0.2s ease, opacity 0.2s ease;
  border: 1px solid transparent;
}

button:focus-visible,
.button:focus-visible {
  /* Use focus-outlineColor for the focus ring color */
  outline: 2px solid var(--focus-outlineColor);
  outline-offset: 2px;
}

button:disabled,
.button:disabled {
  cursor: not-allowed;
  opacity: 0.65;
  /* This opacity value seems okay */
}

/* Primary Button */
button.primary,
.button.primary {
  background-color: var(--button-primary-bgColor-rest);
  color: var(--button-primary-fgColor-rest);
  border-color: var(--button-primary-borderColor-rest);
}

button.primary:hover:not(:disabled),
.button.primary:hover:not(:disabled) {
  background-color: var(--button-primary-bgColor-hover);
  border-color: var(--button-primary-borderColor-hover);
}

button.primary:active:not(:disabled),
.button.primary:active:not(:disabled) {
  background-color: var(--button-primary-bgColor-active);
  border-color: var(--button-primary-borderColor-active);
}

button.primary:disabled,
.button.primary:disabled {
  background-color: var(--button-primary-bgColor-disabled);
  color: var(--button-primary-fgColor-disabled);
  border-color: var(--button-primary-borderColor-disabled);
}

/* Secondary Button */
button.secondary,
.button.secondary {
  background-color: var(--button-secondary-bgColor-rest);
  color: var(--button-secondary-fgColor-rest);
  /* Use border-color var */
  border-color: var(--button-secondary-borderColor-rest);
}

button.secondary:hover:not(:disabled),
.button.secondary:hover:not(:disabled) {
  background-color: var(--button-secondary-bgColor-hover);
  border-color: var(--button-secondary-borderColor-hover);
}

button.secondary:active:not(:disabled),
.button.secondary:active:not(:disabled) {
  background-color: var(--button-secondary-bgColor-active);
  border-color: var(--button-secondary-borderColor-active);
}

button.secondary:disabled,
.button.secondary:disabled {
  background-color: var(--button-secondary-bgColor-disabled);
  color: var(--button-secondary-fgColor-disabled);
  border-color: var(--button-secondary-borderColor-disabled);
}

/* Danger Button */
button.danger,
.button.danger {
  color: var(--button-danger-fgColor-override-for-dark-bg, var(--button-danger-fgColor-rest));
  background-color: var(--button-danger-bgColor-rest);
  border-color: var(--button-danger-borderColor-rest);
}

button.danger:hover:not(:disabled),
.button.danger:hover:not(:disabled) {
  background-color: var(--button-danger-bgColor-hover);
  border-color: var(--button-danger-borderColor-hover);
}

button.danger:active:not(:disabled),
.button.danger:active:not(:disabled) {
  background-color: var(--button-danger-bgColor-active);
  color: var(--button-danger-fgColor-active);
}

button.danger:disabled,
.button.danger:disabled {
  /* Use standardized disabled and muted variables */
  background-color: var(--bgColor-danger-muted);
  color: var(--button-danger-fgColor-disabled);
  border-color: var(--borderColor-danger-muted);
}

/* Outline Button */
button.outline,
.button.outline {
  background-color: transparent;
  color: var(--button-outline-fgColor-rest);
  border-color: var(--button-outline-borderColor-rest);
}

button.outline:hover:not(:disabled),
.button.outline:hover:not(:disabled) {
  background-color: var(--button-outline-bgColor-hover);
  color: var(--button-outline-fgColor-hover);
  border-color: var(--button-outline-borderColor-hover);
}

button.outline:disabled,
.button.outline:disabled {
  color: var(--button-outline-fgColor-disabled);
  border-color: var(--button-outline-borderColor-disabled);
}

/* Icons */
.icon {
  color: var(--icon-primary);
  font-size: 1.2em;
  display: inline-block;
  vertical-align: middle;
  margin-inline-end: 0.3em;
}

/* Forms */
input[type="text"],
input[type="email"],
input[type="password"],
textarea {
  display: block;
  width: 100%;
  background-color: var(--bgColor-default);
  color: var(--fgColor-default);
  border: 1px solid var(--borderColor-default);
  padding: 0.6rem 0.8rem;
  border-radius: 4px;
  font-size: 1rem;
  line-height: 1.5;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
}

input[type="text"]::placeholder,
input[type="email"]::placeholder,
input[type="password"]::placeholder,
textarea::placeholder {
  color: var(--control-fgColor-placeholder);
  opacity: 0.8;
}

input[type="text"]:focus,
input[type="email"]:focus,
input[type="password"]:focus,
textarea:focus {
  outline: none;
  border-color: var(--borderColor-accent-emphasis);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--focus-outlineColor) 50%, transparent);
}

pre,
code {
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace;
  background-color: var(--bgColor-inset);
  color: var(--fgColor-default);
  padding: 0.2em 0.4em;
  border-radius: 3px;
  font-size: 0.9em;
  white-space: pre-wrap;
  word-break: break-word;
}

pre {
  display: block;
  padding: 1em;
  overflow-x: auto;
  border-radius: 6px;
  /* Use border-default */
  border: var(--border-default);
  margin: 1em 0;
}

.text-muted {
  color: var(--fgColor-muted);
}

.bg-default {
  background-color: var(--bgColor-default);
}

.bg-muted {
  background-color: var(--bgColor-muted);
}

.bg-emphasis {
  background-color: var(--bgColor-emphasis);
}

.bg-accent-muted {
  background-color: var(--bgColor-accent-muted);
}

.border-default {
  border: var(--border-default);
}

.border-accent {
  border: var(--border-accent-emphasis);
}

.flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}
